from Crypto.PublicKey import RSA
import gmpy2
from Crypto.Util.number import bytes_to_long, long_to_bytes
from sympy.ntheory.modular import crt

c1 = int("12048631510947709492488194836775166669520520818520242915814263461523377926528209774546738384358773941483829252066976853731750029953313614392367728625529597605960673010477547669780925647384534381577658900309988754629368986776637698181024494117457287250425515088007596434171108228502047467105158652371153374601210213514915910211476960812165222166682464120744692914634821233437699242170054033435409625673513693440528773433091572549303717607663142430011868561871728484515864188870030017003321681787088513377501888873860072449239588850388464762398638601773522637142144442627449767662831807232488305718171032357085611777622", 10)
c2 = int("8779193330568198335879440518921219742708136284271985818534395588376955251004405955230674284574036490676824668328988381167194814588209307187208316543598918660736782457623725876953419317179288437188050748703381596401950676225013282562205544895024279886059282105629711224709363209752763509222361283790840997914062162684743325464730904416100343096371968198474924143767745911551674064342270673942666026589513878426506132349850557184621556709296156708882594330710951933080360280631766717689081060272811367452320014518995196107032383905067006257768719025334171100479815116053024266929596732016895683239694095010777462301127", 10)
c3 = int("2444029979263278156968059857878449745108167440821898967666999619990169292318279278557337468316358774590216649104162492420831467744703353815521693589392738940958232012451169871025856066511342298984068262478889275523394295636154578910123431201159792150840973874773454524056369152768811566769932099914192123504381270438605983197828549413596865925019610767637688086548936672685158661655242734312992585742156352800201517799948180069324708948870797881613980064151177434045657593193629508571910558207826181786285042133741359022106938078866388017934581796376317090663378040895050346792842512982053927483833143973572250022035", 10)

key1 = RSA.import_key(open("pub1.pem").read())
key2 = RSA.import_key(open("pub2.pem").read())
key3 = RSA.import_key(open("pub3.pem").read())

n1 = key1.n
n2 = key2.n
n3 = key3.n

print(f"Key1 - n: {key1.n}, e: {key1.e}")
print(f"Key2 - n: {key2.n}, e: {key2.e}")
print(f"Key3 - n: {key3.n}, e: {key3.e}")
def crt(a, n):
    sum = 0
    prod = 1
    for ni in n:
        prod *= ni

    for ai, ni in zip(a, n):
        p = prod // ni
        sum += ai * gmpy2.invert(p, ni) * p
    return sum % prod

C = crt([c1, c2, c3], [n1, n2, n3])

m = gmpy2.iroot(C, 19)
if m[1]: 
    print("yeye flag:", long_to_bytes(int(m[0])))
else:
    print("shiet")